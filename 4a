#include <stdio.h>
#include <stdlib.h>
#define MAX 100
typedef struct {
intitems[MAX];
inttop;
} Stack;
// Function to initialize the stack
void initialize(Stack *s) {
s->top = -1;
}
// Function to check ifthe stack is empty int
isEmpty(Stack *s) {
return s->top == -1;
}
// Function to check ifthe stack isfull int
isFull(Stack *s) {
return s->top == MAX - 1;
}
// Function to add an element to the stack
void push(Stack *s, int newItem) {
if(isFull(s)){
printf("Stack isfull. Cannot push %d\n", newItem); return;
}
s->items[++(s->top)] = newItem;
}
// Function to remove an element fromthe stack
int pop(Stack *s) {
if (isEmpty(s)) {
printf("Stack is empty. Cannot pop\n"); return
-1;
}
return s->items[(s->top)--];
}
// Function to getthe top element of the stack without removing it int
peek(Stack *s) {
if (isEmpty(s)) {
printf("Stack is empty. Cannot peek\n");
return -1;
}
return s->items[s->top];
}

int main() {
Stack s;
initialize(&s);
//Demonstrating the usage ofthe stack
push(&s, 10);
push(&s, 20);
push(&s, 30);
push(&s, 40);
printf("Top element: %d\n", peek(&s));
printf("Popped element: %d\n", pop(&s));
printf("Top element after pop: %d\n", peek(&s));

return 0;
}
